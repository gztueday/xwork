<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.bigdata.xwork.dao.mapper.SchedulerConfigMapper">
    <resultMap type="com.bigdata.xwork.query.AcceptSchedulerObject" id="BaseResultMap">
        <id column="scheduler_name" property="schedulerName"/>
        <result column="wf_name" property="workFlowName"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="descript" property="descript"/>
        <result column="cron" property="cron"/>
        <result column="delete" property="delete"/>
        <result column="depend_version" property="dependVersion"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="requestObj" property="requestObj"/>

    </resultMap>
    <resultMap type="com.bigdata.xwork.query.AcceptSchedulerObject" id="ConfigList">
        <id column="scheduler_name" property="schedulerName"/>
        <result column="wf_name" property="workFlowName"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="descript" property="descript"/>
        <result column="cron" property="cron"/>
        <result column="delete" property="delete"/>
        <result column="depend_version" property="dependVersion"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="requestObj" property="requestObj"/>

        <collection property="bundles" columnPrefix="c_" ofType="com.bigdata.xwork.dao.entity.Bundle">
            <result column="remote_instanceid" property="remoteInstanceid"/>
            <result column="start_time" property="startTime"/>
            <result column="scheduler_name" property="schedulerName"/>
            <result column="calculate" property="calculate"/>
            <result column="remote_actions" property="remoteActionStr"/>
            <result column="depend_action" property="dependAction"/>
            <result column="reqObj" property="reqObj"/>
        </collection>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="scheduler_name">
        INSERT INTO xwork.scheduler_config
        (scheduler_name, wf_name, start_date, end_date, descript, cron, `delete`, depend_version, create_time, update_time, requestObj)
        VALUES
            (#{schedulerName}, #{workFlowName}, #{startDate}, #{endDate}, #{descript}, #{cron}, #{delete},
                               #{dependVersion}, #{createTime}, #{updateTime}, #{requestObj})
    </insert>

    <sql id="base_column">
        SELECT
            s.scheduler_name AS scheduler_name,
            s.wf_name        AS wf_name,
            s.start_date     AS start_date,
            s.end_date       AS end_date,
            s.descript       AS descript,
            s.cron           AS cron,
            s.`delete`       AS `delete`,
            s.depend_version AS depend_version,
            s.create_time    AS create_time,
            s.update_time    AS update_time,
            s.requestObj     AS requestObj
    </sql>

    <select id="query" resultMap="BaseResultMap">
        <include refid="base_column"/>
        FROM
        xwork.scheduler_config s
        WHERE
        s.scheduler_name = #{schedulerName} AND s.`delete` = 0
    </select>

    <select id="queryCount" resultType="int">
        SELECT count(1)
        FROM xwork.scheduler_config s
        WHERE `delete` = 0 AND s.scheduler_name = #{schedulerName}
    </select>

    <delete id="delete">
        DELETE FROM xwork.scheduler_config
        WHERE scheduler_name = #{schedulerName}
    </delete>

    <sql id="base_where">
        <where>
            s.update_time &gt;=#{beginDate} AND s.update_time &lt;=#{endDate} AND s.delete=0
            <if test="keyword!=null">
                AND s.`scheduler_name` LIKE concat('%',#{keyword},'%')
            </if>
        </where>
    </sql>


    <select id="queryForCount" resultType="int">
        SELECT count(s.scheduler_name) FROM xwork.scheduler_config s
        <include refid="base_where"/>
    </select>

    <select id="querySchedulerConfig" resultMap="ConfigList">
        SELECT
        s.scheduler_name AS scheduler_name,
        s.wf_name AS wf_name,
        s.start_date AS start_date,
        s.end_date AS end_date,
        s.descript AS descript,
        s.cron AS cron,
        s.`delete` AS `delete`,
        s.depend_version AS depend_version,
        s.create_time AS create_time,
        s.update_time AS update_time,
        s.requestObj AS requestObj,
        c.calculate AS c_calculate,
        c.remote_instanceid AS c_remote_instanceid,
        c.remote_actions AS c_remote_action,
        c.depend_action AS c_depend_action,
        c.reqObj AS c_reqObj
        FROM
        xwork.scheduler_config s LEFT JOIN xwork.scheduler_config_relations c ON s.scheduler_name = c.scheduler_name
        <include refid="base_where"/>
        ORDER BY s.update_time DESC
        LIMIT #{start},#{pageSize}
    </select>

    <update id="deleteSchedulerConfig">
        UPDATE xwork.scheduler_config
        SET `delete` = 1
        WHERE scheduler_name = #{schedulerName}
    </update>

</mapper>
